set need-separators off

! This is a "preserving" tokenizer, intending to preserve all input, even
! garbage. It expects omorfi.hfst, omorfi_additions.txt and proper_names.txt
! to be present. The latter two are intended to be a list of missing
! wordforms in OmorFi, and the latter a list of missing proper names that
! probably don't belong in a dictionary.

define punct_trailing "\"" | "'" | "," | ")" | "]" | "}" | "’" | "”" | "–" | ":" | ";" | "»" | ">" | "”";
define punct_preceding "\"" | "'" | "<" | "(" | "[" | "{" | "’" | "”" | "-" | "–" | "»" | ">" | "“";
define punct_sentbound "." | "?" | "!";

define ae "a" | "ä";
define oe "o" | "ö";
define clitics [["k" oe ] | ["h" ae "n"] | [ "k" [{aa}|{ää}] "n" ] |  ! only the ones occurring with open classes
{kin} | [ "p" ae ]]+ ("s");

define omorfi @bin"omorfi.hfst" | @txt"omorfi_additions.txt" ;
define proper_name @txt"proper_names.txt";
define omorfi_suffixes [[("-") LowercaseAlpha+]+ .o. omorfi] .o. ["[POSITION=SUFFIX]" ?+];
define internal_punct "'" | "-" | "." | "*"+;
define unknown_word_char [[\Whitespace] - Punct ] - punct_trailing;
define unknown_token [unknown_word_char+ (internal_punct unknown_word_char+)]+ ;
define boundary Whitespace | .#. ;

define omorfi_with_trailing_punctuation
  LC(boundary) Ins(omorfi) RC([punct_trailing | punct_sentbound]);
define omorfi_with_preceding_punctuation
  LC(punct_preceding) Ins(omorfi) RC(boundary);
define omorfi_between_punctuation
  LC(punct_preceding) Ins(omorfi) RC([punct_trailing | punct_sentbound]);
define trailing_punct NLC(boundary) punct_trailing RC(boundary);
define preceding_punct LC(boundary) punct_preceding NRC(boundary);
define sentbound NLC(boundary) punct_sentbound+ RC(boundary);
define punct_between NLC(boundary) [punct_trailing | punct_preceding] NRC(boundary);

define date Num (Num) "." Num (Num) "." Num^{1,4};
define time Num Num ":" Num Num;

define date_with_time date " " time;
define finnish_colon_separated_conjugation [[omorfi].u .o. [[[\":"]:0]+ ":" LowercaseAlpha^{1,6}]].l;
define token_trailing_parts "-" | finnish_colon_separated_conjugation | ["(" clitics ")"];
define token_preceding_parts define(LC(.#. | "\n") "-") | "@" | "." | "#";
define numerical_exp ("-") Num^{1,3} [(","|"."|" ") Num^{1,3}]+;
define numerical_range numerical_exp ["-" | { - }] numerical_exp;
define percentage_maybe_change (["+" | "-"]) numerical_exp ("%");
define inch_sign {"} | {”};
define numerical numerical_exp | numerical_range | percentage_maybe_change;
define url (({http}) ("s") {://}) ({www.}) [[Alpha | Num]+ (".")]+ "." [Alpha]^{1,10} (":" Num+) ("/" [\Whitespace]+);
define email [\Whitespace]+ "@" [\Whitespace]+ "." Alpha+;
define xml_tag "<" ("/") [\[">"|"\n"]]+ ">";
define typographic_paragraph_separator "*"+ | "-"+ | "=+";
define any_nonwhitespace_utf8_char ? - Whitespace;

define TOP
  ! First the case with a plain omorfi token, possibly with trailing dash
  [ define( LC(boundary) Ins(omorfi) (token_trailing_parts) RC(boundary) ) ] |
  ! word.
  [ omorfi_with_trailing_punctuation ] |
  ! -word
  [ omorfi_with_preceding_punctuation ] |
  ! "word"
  [ omorfi_between_punctuation ] |
  [ proper_name (Ins(omorfi_suffixes)) (token_trailing_parts) ] |
  ! The trailing punctuation
  [ trailing_punct ] |
  [ preceding_punct ] |
  [ xml_tag ] |
  ! This will insert a newline and should be less preferred than dotted
  ! punctuations coming from omorfi
  [ sentbound EndTag("Boundary=Sentence")]::100 |
  [ punct_between ] |
  [[[date_with_time]| time | [numerical (inch_sign)]] (token_trailing_parts)] |
  [("<") url (">") ] | email |
  ! Unknown token
  [ define( LC([boundary | Punct]) token_preceding_parts* unknown_token (Ins(omorfi_suffixes)) token_trailing_parts* RC([boundary | Punct]) ) ]::500 |
  [ token_trailing_parts ]::500 | ! lone trailing part
  [ Punct ]::500 |
  [ typographic_paragraph_separator ]::500 |
  [ any_nonwhitespace_utf8_char ]::1000
;
